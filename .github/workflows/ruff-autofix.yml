# This is a development-focused GitHub Actions workflow.
# It prioritizes automatically fixing and reporting errors without
# blocking the development process by failing the build.

name: 'Ruff Auto-Fixer and Error Reporter (Dev Mode)'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-fix-and-report:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
          if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi

      - name: Format code with Ruff
        run: ruff format backend/

      - name: Lint and fix with Ruff
        # --exit-zero ensures this step passes even if there are unfixable errors.
        run: ruff check backend/ --fix --unsafe-fixes --exit-zero

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: Apply automated Ruff formatting and fixes"
          branch: ${{ github.head_ref }}
          commit_options: '--no-verify'
          repository: .
          commit_user_name: "GitHub Actions Bot"
          commit_user_email: "github-actions-bot@users.noreply.github.com"
          commit_author: "GitHub Actions Bot <github-actions-bot@users.noreply.github.com>"

      - name: Generate error report
        # We use '|| true' to ensure this step doesn't fail the workflow.
        run: |
          ruff check backend/ > ruff-errors.txt || true
      
      - name: Upload error report artifact
        uses: actions/upload-artifact@v4
        with:
          name: ruff-error-report
          path: ruff-errors.txt

      # NOTE: The final, blocking check has been removed for dev mode.
